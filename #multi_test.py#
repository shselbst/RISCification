from entropy_calculator import calculate_entropy_with_pandas, calculate_entropy_with_capstone
from inst import get_inst, get_rand_inst_sample, get_contiguous_rand_inst
from rop import get_num_gadgets
import sys
import matplotlib.pyplot as plt

def main():
    if len(sys.argv) != 3:
        raise ValueError("Usage: python3 test.py binary_file num_repetitions")

    temp_fname = "tmp.bin"
    entropy_values = []
    num_gadgets_values = []

    for i in range(int(sys.argv[2])):
        entropy = calculate_entropy_with_capstone(sys.argv[1])
        get_rand_inst_sample(fname=sys.argv[1], out_fname=temp_fname, num_inst=50)
        num_gadgets = get_num_gadgets(temp_fname)
        print(f"Iteration {i + 1}...\nEntropy: {entropy}\n# Gadgets: {num_gadgets}")

        entropy_values.append(entropy)
        num_gadgets_values.append(num_gadgets)

    # Create dot plot
    plt.figure(figsize=(8, 6))
    plt.plot(entropy_values, num_gadgets_values, 'o', markersize=6)
    plt.title('Dot Plot: Entropy vs Number of Gadgets')
    plt.xlabel('Entropy')
    plt.ylabel('Number of Gadgets')
    plt.grid(True)
    zzzzzzzzzzzzzzzzzzplt.savefig("entropy_vs_gadgets.png")  # Save plot to file
print("Plot saved as entropy_vs_gadgets.png")plt.savefig("entropy_vs_gadgets.png")  # Save plot to file
print("Plot saved as entropy_vs_gadgets.png")zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzplt.savefig("entropy_vs_gadgets.png")  # Save plot to file
print("Plot saved as entropy_vs_gadgets.png")

if __name__ == "__main__":
    main()
